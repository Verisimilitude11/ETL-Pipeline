# import modules needed to process csv, json, and xml files
import glob
import pandas as pd
import xml.etree.ElementTree as ET
from datetime import datetime

# create files for data storage
tmpfile    = "temp.tmp"
logfile    = "logfile.txt"
targetfile = "transformed_data.csv"

# extract csv function
def extract_from_csv(file_to_process):
    dataframe = pd.read_csv(file_to_process)
    return dataframe

# extract json function
def extract_from_json(file_to_process):
    dataframe = pd.read_json(file_to_process,lines=True)
    return dataframe

# extract xml function
def extract_from_xml(file_to_process):
    dataframe = pd.DataFrame(columns=["name", "height", "weight"])
    tree = ET.parse(file_to_process)
    root = tree.getroot()
    for person in root:
        name = person.find("name").text
        height = float(person.find("height").text)
        weight = float(person.find("weight").text)
        dataframe = dataframe.append({"name":name, "height":height, "weight":weight}, ignore_index=True)
    return dataframe

# create an empty data frame to hold extracted data
def extract():
    extracted_data = pd.DataFrame(columns=['name','height','weight'])
    
    #process all csv files
    for csvfile in glob.glob("*.csv"):
        extracted_data = extracted_data.append(extract_from_csv(csvfile), ignore_index=True)
        
    #process all json files
    for jsonfile in glob.glob("*.json"):
        extracted_data = extracted_data.append(extract_from_json(jsonfile), ignore_index=True)
    
    #process all xml files
    for xmlfile in glob.glob("*.xml"):
        extracted_data = extracted_data.append(extract_from_xml(xmlfile), ignore_index=True)
        
    return extracted_data

# convert data units
def transform(data):
        data['height'] = round(data.height * 0.0254,2)
        data['weight'] = round(data.weight * 0.45359237,2)
        return data

# load file
def load(targetfile,data_to_load):
    data_to_load.to_csv(targetfile)  

# start logging in log file as defined earlier
def log(message):
    timestamp_format = '%Y-%h-%d-%H:%M:%S'
    now = datetime.now()
    timestamp = now.strftime(timestamp_format)
    with open("logfile.txt","a") as f:
        f.write(timestamp + ',' + message + '\n')

# log et job started
log("ETL Job Started")

# log extract started, call extract function, log extract ended
log("Extract phase Started")
extracted_data = extract()
log("Extract phase Ended")
extracted_data

# log transform started, call transform function, log transform ended
log("Transform phase Started")
transformed_data = transform(extracted_data)
log("Transform phase Ended")
transformed_data 

# log load started, call load function, log load ended
log("Load phase Started")
load(targetfile,transformed_data)
log("Load phase Ended")

# log etl job ended
log("ETL Job Ended")